notes

phase 1:


wallpaper generator

colour select
pattern select
save to file

fullscreen background
pattern select on the left

phase 2:

To test - nodes:
DecisionNode - choose one of x children to execute, public index.
RepeatNode  - repeat execution of children n times, public n
PathNode - set a path. public path (for custom paths )
PointParam - getVlaue() returns a paper.point. public point
QuadtoTri - should take in an interpolated point set, defaulting at 0,0 1,1 0,1
 SaveParamNode - public getValue(), setParam(int i)
QuadToQuarterCircleNode
QuadToDiagonalLeafNode

PointUtil.createNormalisedQuarterCircle();
PointUtil.createNormalisedTri();
PointUtil.CreateNormalisedDiagonalLeaf();
PointUtil.transformToQuadSpace(normalisedSegments, quad);
QuadToShapeNode(normalisedSegments)
PointUtil.createNormalisedOval();
PointUtil.createNormalisedSCurveShape();
QuadToOvalNOde
QuadToSCurveNode
QuadShear - extend line1 in one direction, line2 in another direction
QuadMirrorNode
add matrix to the state, apply this to the fillnode
TransformNode
center transform from current shape?
quadnode
TranslateGrid
pointutil.CreatePointQuadGrid - ergualr spaced
add group to pattern state, inital null
GroupNode  - public clipping Masking
node  methods - save/restore state group
Blendmode, opacity
CompoundPath - http://paperjs.org/reference/compoundpath/#compoundpath-object

Todo- nodes:


TextureNode(filename)
TextureUtils - texture loading

pointutil.createPointTriGrid

change rectgridutils, tri gridutils to use the quad path instead of the bound
remove the bound from the pattern state

Tri to sub tri node
Tri to sub Quad node

stroke style  http://paperjs.org/reference/shape/


PointPathParam - getValue() return path. for custom paths like drawing out a branch
               - has a set of PointParam children

TranslationPointParam - get the value of the translation from the current matrix state

ShapePathNode extends PathNode - set a regular shape like circle,line, star..
   - centered, anchorpoint?




